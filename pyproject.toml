[project]
name = "fnug"
version = "0.0.26"
description = "A nice lint runner"
authors = [
    { name = "Nickolaj Jepsen", email = "nickolaj@fireproof.website" }
]
dependencies = [
    "click>=8.1.7",
    "textual>=0.85.2",
    "rich>=13.9.2",
    "pydantic>=2.7.1",
    "click-default-group>=1.2.4",
]
readme = "README.md"
requires-python = ">= 3.10"
license = "GPL-3.0"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Environment :: Console",
    "Environment :: Console :: Curses",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Testing",
    "Topic :: Terminals :: Terminal Emulators/X Terminals",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]


[project.scripts]
fnug = "fnug.__main__:main"

[project.urls]
Repository = "https://github.com/nickolaj-jepsen/fnug.git"
Issues = "https://github.com/nickolaj-jepsen/fnug/issues"

[build-system]
requires = ["maturin>=1.2,<2.0"]
build-backend = "maturin"

[tool.maturin]
module-name = "fnug.core"
python-source = "src"

[tool.uv]
managed = true

[dependency-groups]
dev = [
    "ruff>=0.4.3",
    "pyright>=1.1.361",
    "textual-dev>=1.5.1",
    "pytest>=8.2.0",
    "pip>=24.2",
    "maturin[patchelf]>=1.2",
    "types-click-default-group>=1.2.0.0",
    "maturin-import-hook>=0.1.0",
    "pytest-benchmark>=5.1.0",
    "pytest-asyncio>=0.24.0",
]

[tool.ruff]
line-length = 120
src = ["src", "tests"]
target-version = "py310"

[tool.ruff.lint]
select = [
    "F", # pyflakes
    "E", # pycodestyle
    "W", # pycodestyle
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "D213", # pydocstyle - alternative to D212
    "UP", # pyupgrade
    "S", # flake8-bandit
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "RET", # flake8-return
    "SIM", # flake8-simplify
    "PTH", # flake8-use-pathlib
    "ERA", # eradicate
    "PGH", # pygrep-hooks
    "PERF", # Perflint
    "RUF", # ruff
]
ignore = [
    "D100",
    "D104",
    "D106",
    "D107",
    "D203",
    "D212",
]

[tool.ruff.lint.per-file-ignores]
"**/{tests}/*" = ["D", "S101"]
"src/fnug/core.pyi" = ["ALL"]

[tool.pyright]
include = ["src"]
exclude = ["src/fnug/core.pyi"]
strict = ["src"]
